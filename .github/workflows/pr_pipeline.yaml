name: Build on PR

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - pull_request
jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Step 2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.8
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Setup Dependencies
        working-directory: test/
        run:  go get -v -t -d && go mod tidy
      - name: Test
        working-directory: test/
        run: go test -v
#      # Step 8
#      - name: Update Pull Request
#        uses: actions/github-script@0.9.0
#        if: github.event_name == 'pull_request'
#        env:
#          PLAN: "terraform\n${{ steps.plan_global.outputs.stdout }}"
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            const output = `
#            ## Global infra report
#            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
#            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init_global.outcome }}\`
#            #### Terraform Plan üìñ\`${{ steps.plan_global.outcome }}\`
#            #### Terraform Validation ü§ñ\`${{ steps.validate_global.outcome }}\`
#
#            <details><summary>Show Plan</summary>
#
#            \`\`\`\n
#            ${process.env.PLAN}
#            \`\`\`
#
#            </details>
#
#            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
#
#            github.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: output
#            })